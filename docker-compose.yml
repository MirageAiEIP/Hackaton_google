
services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: samu-ai-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: samu
      POSTGRES_PASSWORD: samu_password
      POSTGRES_DB: samu_triage
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U samu']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - samu-network

  # Application Backend
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: samu-ai-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://samu:samu_password@postgres:5432/samu_triage
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: info
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-test_key_for_development}
      JWT_SECRET: ${JWT_SECRET:-test_jwt_secret_minimum_32_chars_required_for_security}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-test_encryption_key_32_chars_min}
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX_REQUESTS: 100
      # Google Cloud
      GCP_PROJECT_ID: ${GCP_PROJECT_ID}
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
      USE_SECRET_MANAGER: true
      # Twilio
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      # ElevenLabs
      ELEVENLABS_AGENT_ID: ${ELEVENLABS_AGENT_ID}
      # Public URL for webhooks
      PUBLIC_API_URL: ${PUBLIC_API_URL}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - samu-network
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health/live']
      interval: 30s
      timeout: 3s
      retries: 3

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: samu-ai-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - samu-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  samu-network:
    driver: bridge
