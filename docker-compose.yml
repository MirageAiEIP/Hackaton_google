version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: samu-ai-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: samu
      POSTGRES_PASSWORD: samu_password
      POSTGRES_DB: samu_triage
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U samu']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - samu-network

  # Application Backend
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: samu-ai-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://samu:samu_password@postgres:5432/samu_triage
      LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - samu-network
    healthcheck:
      test: ['CMD', 'node', '-e', "require('http').get('http://localhost:3000/health')"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Redis (for caching and rate limiting)
  redis:
    image: redis:7-alpine
    container_name: samu-ai-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - samu-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  samu-network:
    driver: bridge
